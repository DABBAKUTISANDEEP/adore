ARG PROJECT

ARG CMAKE_PREFIX_PATH


FROM plotlablib:latest as plotlablib
FROM csaps-cpp:latest as csaps-cpp
FROM qpoases:latest as qpOASES
FROM dlib:v19.19 as dlib
FROM xodr:latest as xodr
FROM catch2:v2.10.2 as Catch2


FROM ubuntu:20.04 as libadore_builder

ARG PROJECT
ARG REQUIREMENTS_FILE="requirements.${PROJECT}.ubuntu20.04.system"
ARG CMAKE_PREFIX_PATH

RUN mkdir -p /tmp/${PROJECT}
COPY files/${REQUIREMENTS_FILE} /tmp/${PROJECT}
WORKDIR /tmp/${PROJECT}

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install --no-install-recommends -y checkinstall && \
    apt-get install --no-install-recommends -y $(sed '/^#/d' ${REQUIREMENTS_FILE} | sed '/^$/d') && \
    rm -rf /var/lib/apt/lists/*

#RUN mkdir -p /tmp/external
#WORKDIR /tmp/external
#COPY --from=csaps-cpp /tmp/csaps-cpp/build/*.deb .
#COPY --from=xodr /tmp/xodr/build/*.deb .
#COPY --from=catch2 /tmp/Catch2/build/*.deb .
#COPY --from=plotlab /tmp/plotlab/lib/build/*.deb .
#SHELL ["/bin/bash", "-c"]
#RUN ls -la && dpkg -i *.deb 


COPY ${PROJECT} /tmp/${PROJECT}
RUN mkdir -p /tmp/${PROJECT}/build/install

COPY --from=plotlablib /tmp/plotlablib /tmp/plotlablib
WORKDIR /tmp/plotlablib/plotlablib/build
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install

ARG LIB=dlib
COPY --from=dlib /tmp/${LIB} /tmp/${PROJECT}/external/${LIB}
WORKDIR /tmp/${PROJECT}/external/${LIB}/build
RUN cmake .. || true
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install

ARG LIB=xodr
COPY --from=xodr /tmp/${LIB} /tmp/${PROJECT}/external/${LIB}
WORKDIR /tmp/${PROJECT}/external/${LIB}/build
RUN cmake .. || true
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install
RUN cmake --install .

ARG LIB=csaps-cpp
COPY --from=csaps-cpp /tmp/${LIB} /tmp/${PROJECT}/external/${LIB}
WORKDIR /tmp/${PROJECT}/external/${LIB}/build
RUN cmake .. || true
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install
RUN cmake --install .

ARG LIB=qpOASES
COPY --from=qpOASES /tmp/${LIB} /tmp/${PROJECT}/external/${LIB}
WORKDIR /tmp/${PROJECT}/external/${LIB}/build
RUN cmake .. || true
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install

ARG LIB=Catch2
COPY --from=Catch2 /tmp/${LIB} /tmp/${PROJECT}/external/${LIB}
WORKDIR /tmp/${PROJECT}/external/${LIB}/build
RUN cmake ..
RUN cmake --install . --prefix /tmp/${PROJECT}/build/install
RUN cmake --install .

WORKDIR /tmp/libadore/build
RUN cmake .. -DBUILD_adore_TESTING=ON -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} -DCMAKE_INSTALL_PREFIX:PATH=install && \
    cmake --build . --config Release --target install -- -j $(nproc)

